<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.36">
  <actions/>
  <description>             powershell(returnStdout: true, script:&apos;&apos;&apos;&#xd;
                    $ProcessList = @(&#xd;
                        \&quot;notepad\&quot;&#xd;
                    )&#xd;
                    $timeout = 30&#xd;
                    $timeout_init = 0&#xd;
                    &#xd;
                    Do {  &#xd;
                            &#xd;
                            $ProcessesFound = [bool](Get-Process | ? {$ProcessList -contains $_.Name} | Select-Object -ExpandProperty Name)&#xd;
                            If ($ProcessesFound) {&#xd;
                                Write-Host &quot;Still running: $ProcessesFound&quot;&#xd;
                                Write-Host &quot;init wait : $timeout_for_notepad_watcher&quot;&#xd;
                                Start-Sleep 1&#xd;
                                $timeout_init++&#xd;
     &#xd;
                            }&#xd;
                &#xd;
                        } Until ($timeout_init -gt 30 -or !$ProcessesFound )&#xd;
                   &#xd;
                &apos;&apos;&apos;)</description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.78">
    <script>
def timeout_for_notepad_watcher = 60

stage(&apos;stage 1&apos;) {
   node(&quot;akoya_medion&quot;) {
       
        def stdout = powershell(returnStdout: true, script: &quot;&quot;&quot;
        \$test = 8
         Write-Output &quot;def var: $timeout_for_notepad_watcher&quot;
         Write-Output &quot;test var: \$test&quot;
        &quot;&quot;&quot;)
        println stdout
        
        def hostname =   powershell(returnStdout: true, script:&apos;&apos;&apos; $env:computername&apos;&apos;&apos;)
        println hostname
        
        
  powershell(returnStdout: true, script:&quot;&quot;&quot;
               
                    \$ProcessList = \&quot;notepad\&quot;
                    \$timeout_init = 0
                    
                    Do {  
                            
                            \$ProcessesFound = [bool](Get-Process | ? {\$ProcessList -contains \$_.Name} | Select-Object -ExpandProperty Name)
                            If (\$ProcessesFound) {
                                Write-Host \&quot;Still running: \$ProcessesFound\&quot;
                                Write-Host \&quot;init wait : $timeout_for_notepad_watcher\&quot;
                                Start-Sleep 1
                                \$timeout_init++
     
                            }
                
                        } Until (\$timeout_init -gt $timeout_for_notepad_watcher -or !\$ProcessesFound )
                   
                &quot;&quot;&quot;)       
        
        
       
        
        
 
    
                   
                  
   }
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>